using namespace std;
#include <stdint.h>
#include <stdlib.h>
#include <time.h>
#include <stdio.h>
#include <unistd.h>
#include <iostream>
#include <string>
#include <libspotify/api.h>
#include <pthread.h>
const char *username = "129346153";
const char *password = "Jawnesux69";
static pthread_mutex_t g_mutex;
static pthread_cond_t g_cond;
#define G_MUTEX_SYNCHRONIZE(code) do {\
  pthread_mutex_lock(&(g_mutex));\
  code;\
  pthread_mutex_unlock(&(g_mutex));\
} while(0)

#define G_WAIT(code) do {\
  G_MUTEX_SYNCHRONIZE(code; pthread_cond_wait(&g_cond, &g_mutex));\
} while(0)

#define G_SIGNAL(code) do {\
  G_MUTEX_SYNCHRONIZE(code; pthread_cond_signal(&g_cond));\
} while(0)
const uint8_t g_appkey[] = {
	0x01, 0xA9, 0xF2, 0x1C, 0xEE, 0x74, 0xCB, 0xC6, 0xEF, 0x73, 0x05, 0x8A, 0x90, 0x78, 0x0D, 0xC5,
	0xC3, 0x14, 0xF0, 0xBD, 0xCA, 0x54, 0x17, 0xC4, 0x53, 0xCE, 0xD0, 0x2D, 0x4F, 0x1D, 0xBF, 0x9D,
	0xF7, 0x8D, 0x26, 0x52, 0x08, 0x01, 0x68, 0x83, 0xF2, 0xD0, 0xD5, 0x1B, 0x0D, 0xB5, 0xB9, 0x81,
	0xAA, 0xB4, 0xFC, 0xFA, 0xA0, 0x41, 0x18, 0x52, 0x56, 0xFF, 0x9E, 0xFC, 0x58, 0xD5, 0x97, 0x4C,
	0x2A, 0xAD, 0x79, 0x6D, 0xFE, 0x23, 0xC3, 0x63, 0x97, 0xFD, 0x42, 0xE8, 0xB6, 0xF5, 0x53, 0x0E,
	0x95, 0x16, 0x1C, 0x43, 0xD6, 0xA9, 0x88, 0x04, 0xAA, 0x88, 0x3D, 0x51, 0xCE, 0x34, 0xD5, 0x29,
	0x0A, 0xF1, 0xE4, 0x26, 0xFC, 0x01, 0xA5, 0x92, 0xA7, 0x81, 0x33, 0x36, 0xAF, 0xEA, 0x5B, 0x1F,
	0x63, 0x5A, 0x86, 0xBF, 0xDA, 0x50, 0x27, 0x4A, 0xC0, 0x09, 0x1C, 0x60, 0x0A, 0x0A, 0x86, 0xAB,
	0x52, 0x41, 0xA1, 0x17, 0x31, 0x3E, 0xFC, 0xD9, 0x79, 0xD0, 0xA2, 0xCC, 0x4A, 0xA4, 0xF1, 0xA4,
	0x98, 0xA0, 0x1B, 0xF8, 0x58, 0x92, 0x07, 0xA9, 0x06, 0x2D, 0x58, 0xB9, 0xB7, 0x39, 0x33, 0x1E,
	0xFF, 0x3B, 0xB3, 0x48, 0x6E, 0x28, 0x45, 0xF1, 0xC1, 0xF5, 0x23, 0x30, 0xA9, 0x9A, 0xB8, 0xFD,
	0xF5, 0x65, 0x69, 0x54, 0x02, 0x94, 0x1D, 0xB2, 0xBA, 0x14, 0x91, 0x9C, 0x9B, 0x87, 0x72, 0xEA,
	0x65, 0xBA, 0x67, 0x4E, 0x66, 0xE7, 0x04, 0xAA, 0x43, 0x6D, 0xCE, 0xC3, 0xDE, 0xD6, 0x94, 0xA5,
	0xEE, 0xDB, 0xA8, 0x71, 0x73, 0xF7, 0xC8, 0x06, 0x1E, 0x6A, 0x79, 0xC7, 0x3A, 0xBF, 0x8A, 0xC2,
	0x2A, 0xBB, 0x6D, 0xC1, 0x38, 0x8A, 0xA2, 0xE1, 0x7B, 0x53, 0xE9, 0x71, 0x58, 0x7B, 0x3A, 0xF2,
	0x73, 0xF0, 0x42, 0x6F, 0xA8, 0xC7, 0xEB, 0xAA, 0x74, 0x42, 0xE5, 0x2A, 0xCD, 0x8F, 0xF0, 0x37,
	0xFD, 0x48, 0x03, 0x27, 0xF4, 0xF4, 0xB4, 0xB6, 0x84, 0x18, 0xB9, 0x97, 0x33, 0x92, 0x24, 0x4E,
	0x2F, 0x7D, 0x19, 0xA8, 0x3F, 0x20, 0xB1, 0xBE, 0x13, 0xB8, 0xBB, 0x98, 0x6F, 0x11, 0x87, 0x18,
	0xA5, 0x1D, 0xC0, 0x0E, 0xC9, 0x1D, 0x51, 0xDA, 0x86, 0x7C, 0xC2, 0x66, 0x45, 0x7F, 0x37, 0x88,
	0xD3, 0xBA, 0xA1, 0x92, 0x1B, 0x9D, 0xCD, 0xA9, 0x96, 0xF2, 0x1F, 0xF6, 0xE5, 0x06, 0xE5, 0x2B,
	0x25,
};
const size_t g_appkey_size = sizeof(g_appkey);
static sp_session_config spconfig = {
    .api_version = SPOTIFY_API_VERSION,
    .cache_location = "temp",
    .settings_location = "temp",
    .application_key = g_appkey,
    .application_key_size = 0, // Set in main()
    .user_agent = "Schmitt",
    .callbacks = NULL,
    .userdata = NULL,
};
int main()
{
    static sp_session * session = NULL;
    sp_error err;
    int numplaylists = -1;
    sp_playlistcontainer * active_container = NULL;
    sp_playlist * active_playlist;
    spconfig.application_key_size= g_appkey_size;
    sp_session_create(&spconfig, &session);
    pthread_mutex_init(&g_mutex, NULL);
    pthread_cond_init(&g_cond, NULL);

    pthread_cond_signal(&g_cond);
    pthread_mutex_unlock(&g_mutex);
    cout<<sp_session_connectionstate(session)<<endl;
    //G_WAIT(
    sp_session_login(session, username, password, 0, NULL);
    //       );
    pthread_mutex_lock(&g_mutex);
    cout<<sp_session_connectionstate(session)<<endl;
    active_container = sp_session_playlistcontainer(session);
    if (active_container != NULL){
        cout<<sp_playlistcontainer_is_loaded(active_container)<<endl;
        numplaylists = sp_playlistcontainer_num_playlists(active_container);
    } else {
        cout<<"failure"<<endl;
    }
    cout<<numplaylists<<endl;
    sp_session_logout(session);
    sp_session_release(session);
    return 0;
}
